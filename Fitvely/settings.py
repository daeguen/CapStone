"""
Django settings for Fitvely project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


import os

LOGGING = {
    "version" : 1,
    "disable_existing_loggers" : False, # 보이지 않겠냐
    "formatters" : { # 저장된 로그파일의 형식, 딕셔너리로 들어감
        
        # 회원
        "member" : {
            "format" : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s", # 시간을 먼저 찍어라, 레벨이름, 이름, 줄번호, 메시지
            "datefmt" : "%Y-%m-%d %H:%M:%S",
            },
        "format1" : {
            "format" : "%(levelname)s %(message)s",
            },
        
        # qna
        "qna" : {
            "format" : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            "datefmt" : "%Y-%m-%d %H:%M:%S",
            },
        "format2" : {
            "format" : "%(levelname)s %(message)s",
            },
        
        # 공지
        "notice" : {
            "format" : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s", 
            "datefmt" : "%Y-%m-%d %H:%M:%S",
            },
        "format3" : {
            "format" : "%(levelname)s %(message)s",
            },
        
        # 반품
        "return" : {
            "format" : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s", 
            "datefmt" : "%Y-%m-%d %H:%M:%S",
            },
        "format4" : {
            "format" : "%(levelname)s %(message)s",
            },
        
        # 상품
        "prod" : {
            "format": "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            "datafmt": "%Y-%m-%d %H:%M:%S",
            },
        "format5":{
            "format": "%(levelname)s %(message)s",
            },
        
        # 카트
         "cart" : {
            "format": "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            "datafmt": "%Y-%m-%d %H:%M:%S",
            },
        "format6" : {
            "datafmt": "%Y-%m-%d %H:%M:%S",
            },
        
        # 리뷰
        "review":{
            "format": "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            "datafmt": "%Y-%m-%d %H:%M:%S",
            },
        "format7":{
            "format": "%(levelname)s %(message)s",
            },
        
        # 구매
        "pay":{
            "format": "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            "datafmt": "%Y-%m-%d %H:%M:%S",
            },
        "format8":{
            "datafmt": "%Y-%m-%d %H:%M:%S",
            },
        
        # 검색
        "search":{
            "format": "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            "datafmt": "%Y-%m-%d %H:%M:%S",
            },
        "format9":{
            "datafmt": "%Y-%m-%d %H:%M:%S",
            },
        
        # 페이지 이동
        "pagemove":{
            "format": "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            "datafmt": "%Y-%m-%d %H:%M:%S",
            },
        "format10":{
            "datafmt": "%Y-%m-%d %H:%M:%S",
            },
        
        },
    "handlers" : {
        # 파일로 출력하는 형식
        
        # 회원
        "file" : {
            "level" : "INFO",
            "class" : "logging.handlers.RotatingFileHandler",
            "filename" : os.path.join( BASE_DIR, "log/shopmember.log" ),
            "maxBytes" : 1024 * 1024 * 5, # 5메가
            "encoding" : "utf-8",
            "backupCount" : 5,
            "formatter" : "member", # 출력 형식을 위에만든 format1로 지정
            },
        "console" : {
            "level" : "DEBUG",
            "class" : "logging.StreamHandler",
            "formatter" : "format1",
            },
        
        # qna
        "file1" : {
            "level" : "INFO",
            "class" : "logging.handlers.RotatingFileHandler",
            "filename" : os.path.join( BASE_DIR, "log/shopqna.log" ),
            "maxBytes" : 1024 * 1024 * 5, # 5메가
            "encoding" : "utf-8",
            "backupCount" : 5,
            "formatter" : "qna", # 출력 형식을 위에만든 format1로 지정
            },
        "console" : {
            "level" : "DEBUG",
            "class" : "logging.StreamHandler",
            "formatter" : "format2",
            },
        
        # 공지사항
        "file2" : {
            "level" : "INFO",
            "class" : "logging.handlers.RotatingFileHandler",
            "filename" : os.path.join( BASE_DIR, "log/shopnotice.log" ),
            "maxBytes" : 1024 * 1024 * 5, # 5메가
            "encoding" : "utf-8",
            "backupCount" : 5,
            "formatter" : "notice", # 출력 형식을 위에만든 format1로 지정
            },
        "console" : {
            "level" : "DEBUG",
            "class" : "logging.StreamHandler",
            "formatter" : "format3",
            },
        
        # 반품
        "file3" : {
            "level" : "INFO",
            "class" : "logging.handlers.RotatingFileHandler",
            "filename" : os.path.join( BASE_DIR, "log/shopreturn.log" ),
            "maxBytes" : 1024 * 1024 * 5, # 5메가
            "encoding" : "utf-8",
            "backupCount" : 5,
            "formatter" : "notice", # 출력 형식을 위에만든 format1로 지정
            },
        "console" : {
            "level" : "DEBUG",
            "class" : "logging.StreamHandler",
            "formatter" : "format4",
            },
        
        # 상품
        "file4":{
            "level" : "INFO",
            "class": "logging.handlers.RotatingFileHandler",
            "filename":os.path.join( BASE_DIR, "log/shopproduct.log" ),
            "maxBytes": 1024 * 1024 * 5, # 5메가
            "encoding" : "utf-8",
            "backupCount":5,
            "formatter":"prod",
            },
        "console" :{
            "level":"DEBUG",
            "class": "logging.StreamHandler",
            "formatter" : "format5",
            },
        
        # 카트
        "file5":{
            "level" : "INFO",
            "class": "logging.handlers.RotatingFileHandler",
            "filename":os.path.join( BASE_DIR, "log/shopcart.log" ),
            "maxBytes": 1024 * 1024 * 5, # 5메가
            "encoding" : "utf-8",
            "backupCount":5,
            "formatter":"cart",
            },
        "console":{
            "level":"DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "format6"
            },
        
        # 리뷰
        "file6": {
            "level" : "INFO",
            "class": "logging.handlers.RotatingFileHandler",
            "filename":os.path.join( BASE_DIR, "log/shopreview.log" ),
            "maxBytes": 1024 * 1024 * 5, # 5메가
            "encoding" : "utf-8",
            "backupCount":5,
            "formatter":"review",
            },
        "console" :{
            "level" : "DEBUG",
            "class" : "logging.StreamHandler",
            "formatter" : "format7",
            },
        
        #구매(payment)
        "file7":{
            "level" : "INFO",
            "class": "logging.handlers.RotatingFileHandler",
            "filename":os.path.join( BASE_DIR, "log/shoppay.log" ),
            "maxBytes": 1024 * 1024 * 5, # 5메가
            "encoding" : "utf-8",
            "backupCount":5,
            "formatter":"pay"
            },
        "console":{
            "level":"DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "format8"
            },
        
        #검색
        "file8":{
            "level" : "INFO",
            "class": "logging.handlers.RotatingFileHandler",
            "filename":os.path.join( BASE_DIR, "log/search_product.log" ),
            "maxBytes": 1024 * 1024 * 5, # 5메가
            "encoding" : "utf-8",
            "backupCount":5,
            "formatter":"search"
            },
        "console":{
            "level":"DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "format9"
            },
        
        #이동
        "file9":{
            "level" : "INFO",
            "class": "logging.handlers.RotatingFileHandler",
            "filename":os.path.join( BASE_DIR, "log/pagemove.log" ),
            "maxBytes": 1024 * 1024 * 5, # 5메가
            "encoding" : "utf-8",
            "backupCount":5,
            "formatter":"pagemove"
            },
        "console":{
            "level":"DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "format10"
            },

        
        },
    "loggers" : {  # 누가 출력할 것인지
        # 로거의 종류
        "django" : {
            "handlers" : ["console"], # 에러까지 있으면 잘라쓰기 힘듬, 콘솔에만 출력
            "propagate" : True,
            "level" : "WARNING",
            },
        "django.request" : {
            "handlers" : ["console"],
            "propagate" : True,
            "level" : "WARNING",
            },
        
        # 맴버
        "shopmember" : {
            "handlers" : ["file"],
            "propagate" : True,
            "level" : "INFO",
            },
        
        # qna
        "shopqna" : {
            "handlers" : ["file1"],
            "propagate" : True,
            "level" : "INFO",
            },
        
        # 공지
        "shopnotice" : {
            "handlers" : ["file2"],
            "propagate" : True,
            "level" : "INFO",
            },
        
        # 반품
        "shopreturn" : {
            "handlers" : ["file3"],
            "propagate" : True,
            "level" : "INFO",
            },  
        
        # 상품
        "shopproduct":{
            "handlers" : ["file4"],
            "propagate" : True,
            "level" : "INFO"
            },
        
         #카트     
        "shopcart":{
            "handlers" :["file5"],
            "propagate": True,
            "level": "INFO",
            },
        
        # 리뷰  
        "shopreview" : {
            "handlers" : ["file6"],
            "propagate" : True,
            "level" : "INFO"
            },
        
        # 구매
        "shoppay":{
            "handlers":["file7"],
            "propagate":True,
            "level":"INFO"
            },
        
        # 검색
        "search_product":{
            "handlers":["file8"],
            "propagate":True,
            "level":"INFO"
            },
        
        # 이동
        "shoppagemove":{
            "handlers":["file9"],
            "propagate":True,
            "level":"INFO"
            },

        }    
    }

SESSION_EXPIRE_AT_BROWSER_CLOSE = True # 이부분 추가
LOGOUT_REDIRECT_URL = '/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o@edsr-a3r8&ta7wk+mi-u8c+1r5j+fqz%+y4d1*=qn$9&mdt4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["localhost", "127.0.0.1","222.113.164.243","eorms0203.codns.com"]


MEDIA_URL="/media/" # 미디어 파일을 저장할 사용자 경로를 지정
MEDIA_ROOT = os.path.join(BASE_DIR,"media")

# Application definition

INSTALLED_APPS = [
    'django.contrib.humanize',
    'mathfilters',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'shopmember.apps.ShopmemberConfig',
    'shopnotice.apps.ShopnoticeConfig',
    'shopqna.apps.ShopqnaConfig',
    'shopproduct.apps.ShopproductConfig',
    'shopcart.apps.ShopcartConfig',
    'shopreview.apps.ShopreviewConfig',
    'shoppay.apps.ShoppayConfig',
    'shopreturn.apps.ShopreturnConfig',
    'search_product.apps.SearchProductConfig',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'Fitvely.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'shopmember', 'templates/'), os.path.join(BASE_DIR, 'search.app', 'templates/')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Fitvely.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default' : {
        'ENGINE' : 'django.db.backends.mysql',
        'NAME' : "fitvely",
        "USER" : "bit",
        "PASSWORD" : "bit",
        "HOST" : "localhost",
        "PORT" : "3306",
        }
    }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


##CORS
CORS_ORIGIN_ALLOW_ALL=True
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)
